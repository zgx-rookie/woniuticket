<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniuxy.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.woniuxy.domain.Orders">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="movid" jdbcType="INTEGER" property="movid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="opaytime" jdbcType="DATE" property="opaytime" />
    <result column="opaymoney" jdbcType="DOUBLE" property="opaymoney" />
    <result column="ostate" jdbcType="VARCHAR" property="ostate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oid, movid, uid, opaytime, opaymoney, ostate
  </sql>
  <select id="selectByExample" parameterType="com.woniuxy.domain.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniuxy.domain.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniuxy.domain.Orders">
    insert into orders (oid, movid, uid, 
      opaytime, opaymoney, ostate
      )
    values (#{oid,jdbcType=INTEGER}, #{movid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{opaytime,jdbcType=DATE}, #{opaymoney,jdbcType=DOUBLE}, #{ostate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniuxy.domain.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="movid != null">
        movid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="opaytime != null">
        opaytime,
      </if>
      <if test="opaymoney != null">
        opaymoney,
      </if>
      <if test="ostate != null">
        ostate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="movid != null">
        #{movid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="opaytime != null">
        #{opaytime,jdbcType=DATE},
      </if>
      <if test="opaymoney != null">
        #{opaymoney,jdbcType=DOUBLE},
      </if>
      <if test="ostate != null">
        #{ostate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniuxy.domain.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.movid != null">
        movid = #{record.movid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.opaytime != null">
        opaytime = #{record.opaytime,jdbcType=DATE},
      </if>
      <if test="record.opaymoney != null">
        opaymoney = #{record.opaymoney,jdbcType=DOUBLE},
      </if>
      <if test="record.ostate != null">
        ostate = #{record.ostate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set oid = #{record.oid,jdbcType=INTEGER},
      movid = #{record.movid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      opaytime = #{record.opaytime,jdbcType=DATE},
      opaymoney = #{record.opaymoney,jdbcType=DOUBLE},
      ostate = #{record.ostate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniuxy.domain.Orders">
    update orders
    <set>
      <if test="movid != null">
        movid = #{movid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="opaytime != null">
        opaytime = #{opaytime,jdbcType=DATE},
      </if>
      <if test="opaymoney != null">
        opaymoney = #{opaymoney,jdbcType=DOUBLE},
      </if>
      <if test="ostate != null">
        ostate = #{ostate,jdbcType=VARCHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniuxy.domain.Orders">
    update orders
    set movid = #{movid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      opaytime = #{opaytime,jdbcType=DATE},
      opaymoney = #{opaymoney,jdbcType=DOUBLE},
      ostate = #{ostate,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
</mapper>